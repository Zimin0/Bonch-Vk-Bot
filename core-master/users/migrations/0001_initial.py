# Generated by Django 3.2.8 on 2021-10-07 16:39

import datetime

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EducationalInstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=500,
                        verbose_name="Название учебного заведения",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EducationalType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        verbose_name="Название типа учебного заведения",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200,
                        verbose_name="Название населенного пункта",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        max_length=5000, verbose_name="Текст уведомления"
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        default=datetime.datetime.utcnow,
                        verbose_name="Дата создания уведомления",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=125, verbose_name="Тип уведомлений"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=250, verbose_name="Название платформы"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=128, verbose_name="Имя"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=128, verbose_name="Фамилия"),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=128,
                        null=True,
                        verbose_name="Отчество",
                    ),
                ),
                (
                    "birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата рождения"
                    ),
                ),
                (
                    "educational_institution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="users.educationalinstitution",
                        verbose_name="Место учебы",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        verbose_name="Название роли пользователя",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRestriction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        default="Отсутствует",
                        verbose_name="Причина блокировки",
                    ),
                ),
                (
                    "date_blocked",
                    models.DateField(
                        default=datetime.datetime.utcnow,
                        verbose_name="Дата блокировки",
                    ),
                ),
                (
                    "date_unblocked",
                    models.DateField(
                        null=True, verbose_name="Дата разблокировки"
                    ),
                ),
                (
                    "user",
                    models.ManyToManyField(
                        related_name="restrictions",
                        to="users.User",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "delivered",
                    models.BooleanField(
                        default=False, verbose_name="Статус доставки"
                    ),
                ),
                (
                    "delivery_date",
                    models.DateTimeField(
                        verbose_name="Время доставки уведомления"
                    ),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="users.notification",
                        verbose_name="Уведомление",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.user",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="roles",
            field=models.ManyToManyField(
                blank=True,
                related_name="users",
                to="users.UserRole",
                verbose_name="Роль пользователя на платформе",
            ),
        ),
        migrations.CreateModel(
            name="NotificationStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.BooleanField(default=True, verbose_name="включены"),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.notificationtype",
                        verbose_name="Тип",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.user",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="notification",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                to="users.notificationtype",
                verbose_name="Тип уведомления",
            ),
        ),
        migrations.CreateModel(
            name="GameAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nick_name",
                    models.CharField(
                        default="Ник",
                        max_length=500,
                        verbose_name="Ник пользователя на платформе",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accounts",
                        to="users.platform",
                        verbose_name="Платфрома",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accounts",
                        to="users.user",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="educationalinstitution",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="users",
                to="users.location",
                verbose_name="Локация",
            ),
        ),
        migrations.AddField(
            model_name="educationalinstitution",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="institutions",
                to="users.educationaltype",
                verbose_name="Тип",
            ),
        ),
    ]
